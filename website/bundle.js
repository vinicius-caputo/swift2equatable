(()=>{"use strict";var e={607:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.swift2equatable=void 0;const r=s(577),n=s(419);t.swift2equatable=function(e){const t=new r.Parser(e);return t.parseFile(),n.swift2equatableConverter.convert(t.structList,t.enumList)}},868:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.lexemes=void 0,t.lexemes={init:new RegExp(/init\((.*?)\) ?{.*?}/,"gs"),function:new RegExp(/func ([a-zA-Z][a-zA-Z0-9]*?)\(.*?\){.*?}/,"gs"),switch:new RegExp(/switch .*?{.*?}/,"gs"),struct:new RegExp(/(struct|class|extension) ([a-zA-Z][a-zA-Z0-9]*?):? .*?{/),variable:new RegExp(/(var|let) (.*?): ([a-zA-Z][a-zA-Z0-9]*)/),identifier:new RegExp(/[a-zA-Z][a-zA-Z0-9]*/,"g"),endBracket:new RegExp(/}/),enum:new RegExp(/enum ([a-zA-Z][a-zA-Z0-9]*?):? .*?{/),enumCase:new RegExp(/case ([a-zA-Z][a-zA-Z0-9]*)(\((.*?)\))?/)}},577:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Parser=void 0;const r=s(868);t.Parser=class{lines;sytaxTree;constructor(e){e=this.cleanUnnecessaryStructures(e),this.lines=e.split("\n"),this.sytaxTree={structs:[],enums:[]}}cleanUnnecessaryStructures(e){return(e=(e=e.replaceAll(r.lexemes.init,"")).replaceAll(r.lexemes.function,"")).replaceAll(r.lexemes.switch,"")}parseFile(){for(;this.lines.length>0;){let e=this.lines.shift()??"";const t=e.match(r.lexemes.struct);t&&this.sytaxTree.structs.push(this.parseStruct(t[2]));const s=e.match(r.lexemes.enum);s&&this.sytaxTree.enums.push(this.parseEnum(s[1]))}return this.sytaxTree}parseStruct(e){let t={fullName:e,property:[],subStructs:[],enums:[]};for(;this.lines.length>0;){let s=this.lines.shift()??"";const n=s.match(r.lexemes.struct),a=s.match(r.lexemes.enum);if(n)t.subStructs.push(this.parseStruct(e+"."+n[2]));else if(s.match(r.lexemes.variable))t.property=t.property.concat(this.parseProperty(s));else if(a)t.enums.push(this.parseEnum(e+"."+a[1]));else if(s.match(r.lexemes.endBracket))return t}return t}parseProperty(e){let t=[];const s=e.match(r.lexemes.variable);if(null===s)return t;const n=s[2].matchAll(r.lexemes.identifier),a=s[3];for(const e of n)t.push({name:e[0],type:a});return t}parseEnum(e){let t={name:e,cases:[]};for(;this.lines.length>0;){let e=this.lines.shift()??"";if(e.match(r.lexemes.enumCase))t.cases.push(this.parseEnumCase(e));else if(e.match(r.lexemes.endBracket))return t}return t}parseEnumCase(e){let t={name:"",parameters:[]};const s=e.match(r.lexemes.enumCase);return null===s||(t.name=s[1],s[3]&&(t.parameters=this.parseEnumCaseParameters(s[3]))),t}parseEnumCaseParameters(e){let t=[],s=e.split(",");for(const e in s){s[e]=s[e].replaceAll(" ","");const r=s[e].split(":");1===r.length?t.push({name:void 0,type:r[0]+e}):t.push({name:r[0],type:r[1]})}return t}get structList(){return this.getStructList(this.sytaxTree.structs)}get enumList(){return this.sytaxTree.enums.concat(this.getEnumInsideStructs(this.sytaxTree.structs))}getStructList(e){let t=[];for(const s of e)t.push(s),t=t.concat(this.getStructList(s.subStructs));return t}getEnumInsideStructs(e){let t=[];for(const s of e)t=t.concat(s.enums),t=t.concat(this.getEnumInsideStructs(s.subStructs));return t}}},419:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.swift2equatableConverter=void 0;const r=s(910);t.swift2equatableConverter=class{static convert(e,t){let s=[];for(const t of e)0!=t.property.length&&s.push(this.convertStruct(t));for(const e of t)0!=e.cases.length&&s.push(this.convertEnum(e));return s.join("\n\n")}static convertStruct(e){let t=[];t.push(`extension ${e.fullName}: Equatable {`),t.push(`\tstatic func == (lhs: ${e.fullName}, rhs: ${e.fullName}) -> Bool {`);let s=[];for(const t of e.property)s.push(`lhs.${t.name} == rhs.${t.name}`);return s[0]=`\t\treturn ${s[0]}`,t.push(`${s.join("\n\t\t&& ")}`),t.push("\t}"),t.push("}"),t.join("\n")}static convertEnum(e){let t=[];t.push(`extension ${e.name}: Equatable {`),t.push(`\tstatic func == (lhs: ${e.name}, rhs: ${e.name}) -> Bool {`),t.push("\t\tswitch (lhs, rhs) {");let s=[];for(const t of e.cases)s.push(this.convertEnumCase(t));return t.push(`${s.join("\n")}`),t.push("\t\tdefault:"),t.push("\t\t\treturn false"),t.push("\t\t}"),t.push("\t}"),t.push("}"),t.join("\n")}static convertEnumCase(e){let t=[];if(0==e.parameters.length)return t.push(`\t\tcase (.${e.name}, .${e.name}):`),t.push("\t\t\treturn true"),t.join("\n");const s=this.convertEnumCaseParameterDefine(e.parameters,"lhs"),r=this.convertEnumCaseParameterDefine(e.parameters,"rhs");return t.push(`\t\tcase (.${e.name}(${s}), .${e.name}(${r})):`),t.push(`\t\t\treturn ${this.convertEnumCaseParameterCompare(e.parameters)}`),t.join("\n")}static convertEnumCaseParameterDefine(e,t){let s=[];for(const n of e)s.push(`let ${t}${(0,r.captalizeFirstLetter)(n.name??n.type)}`);return s.join(", ")}static convertEnumCaseParameterCompare(e){let t=[];for(const s of e){let e=(0,r.captalizeFirstLetter)(s.name??s.type);t.push(`lhs${e} == rhs${e}`)}return t.join(" && ")}}},910:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.captalizeFirstLetter=void 0,t.captalizeFirstLetter=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,s),a.exports}(()=>{const e=s(607);document.getElementById("generate-button").addEventListener("click",(function(){console.log("Generate");let t=document.getElementById("input-Text").value;const s=document.getElementById("output-Text");let r=(0,e.swift2equatable)(t);s.value=r}))})()})();